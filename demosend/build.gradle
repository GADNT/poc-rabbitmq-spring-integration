group = 'com.gad.first'
description = 'producer'
version = '0.0.1-SNAPSHOT'
project.ext {
    name = "producer"
    shortName = 'pro'
    springProfilesActive = System.properties['spring.profiles.active']
    devPort = System.properties['dev.port']
}
buildscript {
	ext {
		springBootVersion = '1.4.2.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'

jar {
	baseName = 'demosend'
	version = '0.0.1-SNAPSHOT'
}

sourceCompatibility = 1.8

repositories {
	mavenCentral()
}



dependencies {
	compile('org.springframework.cloud:spring-cloud-starter-config')
	compile('org.springframework.cloud:spring-cloud-stream:1.1.0.RELEASE')
	compile('org.springframework.cloud:spring-cloud-starter-stream-rabbit')
	compile 'org.springframework.boot:spring-boot-starter-web'
	compile('org.springframework.boot:spring-boot-starter-websocket')
	compile('org.springframework.boot:spring-boot-starter-integration')
	compile('io.projectreactor:reactor-core')
	compile('io.projectreactor:reactor-net')
	compile('io.netty:netty-all:4.0.30.Final')
	compile 'org.springframework.boot:spring-boot-starter-actuator'
	compile 'org.springframework.boot:spring-boot-starter-aop'

	//boot cloud starters
	compile 'org.springframework.cloud:spring-cloud-starter-sleuth'
	compile 'org.springframework.cloud:spring-cloud-starter-oauth2'

	compile 'org.springframework.retry:spring-retry'
    compile 'net.logstash.logback:logstash-logback-encoder:4.7'
	compile 'org.springframework.security:spring-security-jwt'
	testCompile('org.springframework.boot:spring-boot-starter-test')
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:Camden.SR2"
	}
}
